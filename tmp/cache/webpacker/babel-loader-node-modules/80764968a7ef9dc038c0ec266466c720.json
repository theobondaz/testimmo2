{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\n\nvar fitMapToMarkers = function fitMapToMarkers(map, markers) {\n  var bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(function (marker) {\n    return bounds.extend([marker.lng, marker.lat]);\n  });\n  map.fitBounds(bounds, {\n    padding: 70,\n    maxZoom: 15,\n    duration: 0\n  });\n};\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  if (mapElement) {\n    // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11'\n    });\n    var markers = JSON.parse(mapElement.dataset.markers);\n    markers.forEach(function (marker) {\n      new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).addTo(map);\n    });\n    fitMapToMarkers(map, markers);\n  }\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/home/nibut0n/code/theobondaz/testimmo/app/javascript/packs/init_mapbox.js"],"names":["mapboxgl","fitMapToMarkers","map","markers","bounds","LngLatBounds","forEach","marker","extend","lng","lat","fitBounds","padding","maxZoom","duration","initMapbox","mapElement","document","getElementById","accessToken","dataset","mapboxApiKey","Map","container","style","JSON","parse","Marker","setLngLat","addTo"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,OAAN,EAAkB;AACxC,MAAMC,MAAM,GAAG,IAAIJ,QAAQ,CAACK,YAAb,EAAf;AACAF,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM;AAAA,WAAIH,MAAM,CAACI,MAAP,CAAc,CAAED,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CAAd,CAAJ;AAAA,GAAtB;AACAR,EAAAA,GAAG,CAACS,SAAJ,CAAcP,MAAd,EAAsB;AAAEQ,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,OAAO,EAAE,EAAxB;AAA4BC,IAAAA,QAAQ,EAAE;AAAtC,GAAtB;AACD,CAJD;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AAEA,MAAIF,UAAJ,EAAgB;AAAE;AAChBhB,IAAAA,QAAQ,CAACmB,WAAT,GAAuBH,UAAU,CAACI,OAAX,CAAmBC,YAA1C;AACA,QAAMnB,GAAG,GAAG,IAAIF,QAAQ,CAACsB,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KADgB;AAE3BC,MAAAA,KAAK,EAAE;AAFoB,KAAjB,CAAZ;AAIA,QAAMrB,OAAO,GAAGsB,IAAI,CAACC,KAAL,CAAWV,UAAU,CAACI,OAAX,CAAmBjB,OAA9B,CAAhB;AACAA,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,UAAIP,QAAQ,CAAC2B,MAAb,GACGC,SADH,CACa,CAAErB,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CADb,EAEGmB,KAFH,CAES3B,GAFT;AAGD,KAJD;AAKED,IAAAA,eAAe,CAACC,GAAD,EAAMC,OAAN,CAAf;AACH;AACF,CAjBD;;AAoBA,SAASY,UAAT","sourcesContent":["import mapboxgl from 'mapbox-gl';\n\nconst fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n};\n\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n\n  if (mapElement) { // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11'\n    });\n    const markers = JSON.parse(mapElement.dataset.markers);\n    markers.forEach((marker) => {\n      new mapboxgl.Marker()\n        .setLngLat([ marker.lng, marker.lat ])\n        .addTo(map);\n    });\n      fitMapToMarkers(map, markers);\n  }\n};\n\n\nexport { initMapbox };\n\n\n"]},"metadata":{},"sourceType":"module"}